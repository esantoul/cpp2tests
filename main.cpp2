
#include <fmt/format.h>
#include <concepts>

template <template <typename...> typename C, typename T>
constexpr auto myis(const T& val)
{
  return std::integral<T>;
}

myparser : (value : _) = {
  fmt::print("{}\n",
    inspect value -> std::string {
      is int = "int [(value)$]";
      is 10 = "match value 10";
      is _ = "Unknown input";
  });
}

main: () -> int = {
  myparser(10u);
  fmt::print("test: {}\n", 42);
  return 0;
}
